=begin
#SurveyMonkey API V3 

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.27
=end

require 'spec_helper'
require 'json'

# Unit tests for SurveyMonkeySwaggerClient::CollectorsAndInviteMessagesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CollectorsAndInviteMessagesApi' do
  before do
    # run before each test
    @instance = SurveyMonkeySwaggerClient::CollectorsAndInviteMessagesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CollectorsAndInviteMessagesApi' do
    it 'should create an instance of CollectorsAndInviteMessagesApi' do
      expect(@instance).to be_instance_of(SurveyMonkeySwaggerClient::CollectorsAndInviteMessagesApi)
    end
  end

  # unit tests for add_recipient_to_a_message
  # Add recipient to a message
  # Add a new recipient to a specified message
  # @param collector_id 
  # @param message_id 
  # @param [Hash] opts the optional parameters
  # @option opts [MESSAGEIDRecipientsBody] :body 
  # @return [nil]
  describe 'add_recipient_to_a_message test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_a_collector_message
  # Create a collector message
  # Create a collector message
  # @param collector_id 
  # @param [Hash] opts the optional parameters
  # @option opts [COLLECTORIDMessagesBody] :body 
  # @return [nil]
  describe 'create_a_collector_message test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_a_survey_collector
  # Create a survey collector
  # Creates a webline or email collector for a given survey
  # @param [Hash] opts the optional parameters
  # @option opts [Model310099766CollectorsBody] :body 
  # @return [nil]
  describe 'create_a_survey_collector test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_multiple_recipients
  # Create multiple recipients
  # Create multiple recipients
  # @param collector_id 
  # @param message_id 
  # @param [Hash] opts the optional parameters
  # @option opts [RecipientsBulkBody] :body 
  # @return [nil]
  describe 'create_multiple_recipients test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_a_collector
  # Delete a collector
  # Delete a collector
  # @param collector_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_a_collector test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_a_message
  # Delete a message
  # Delete a collector message
  # @param collector_id 
  # @param message_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_a_message test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_a_recipient
  # Delete a recipient
  # Delete a recipient by id
  # @param collector_id 
  # @param recipient_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_a_recipient test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_a_collector_by_id
  # Get a collector by id
  # Get a collector by id
  # @param collector_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_a_collector_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_a_list_of_recipients
  # Get a list of recipients
  # Get a list of recipients
  # @param collector_id 
  # @param message_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_a_list_of_recipients test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_a_message_by_id
  # Get a message by id
  # Get a collector message by id
  # @param collector_id 
  # @param message_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_a_message_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_a_recipient
  # Get a recipient
  # Get a recipient by id
  # @param collector_id 
  # @param recipient_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_a_recipient test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_collector_messages
  # Get collector messages
  # Get collector messages
  # @param collector_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_collector_messages test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_survey_collectors
  # Get survey collectors
  # Get a list of collectors for a given survey
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_survey_collectors test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for modify_a_collector
  # Modify a collector
  # Modify a collector
  # @param collector_id 
  # @param [Hash] opts the optional parameters
  # @option opts [CollectorsCOLLECTORIDBody1] :body 
  # @return [nil]
  describe 'modify_a_collector test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for modify_a_message_by_id
  # Modify a message by id
  # Mofiy a collector message by id
  # @param collector_id 
  # @param message_id 
  # @param [Hash] opts the optional parameters
  # @option opts [MessagesMESSAGEIDBody1] :body 
  # @return [nil]
  describe 'modify_a_message_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace_a_collector
  # Replace a collector
  # Replace a collector
  # @param collector_id 
  # @param [Hash] opts the optional parameters
  # @option opts [CollectorsCOLLECTORIDBody] :body 
  # @return [nil]
  describe 'replace_a_collector test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace_a_message
  # Replace a message
  # Replace a collector message
  # @param collector_id 
  # @param message_id 
  # @param [Hash] opts the optional parameters
  # @option opts [MessagesMESSAGEIDBody] :body 
  # @return [nil]
  describe 'replace_a_message test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_and_existing_message
  # Send and existing message
  # Send or schedule to send an existing message to all recipients that have not received the message
  # @param collector_id 
  # @param message_id 
  # @param [Hash] opts the optional parameters
  # @option opts [MESSAGEIDSendBody] :body 
  # @return [nil]
  describe 'send_and_existing_message test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
