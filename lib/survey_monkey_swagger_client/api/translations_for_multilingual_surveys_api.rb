=begin
#SurveyMonkey API V3

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.27
=end

module SurveyMonkeySwaggerClient
  class TranslationsForMultilingualSurveysApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a translation
    # Create a translation
    # @param survey_id
    # @param locale
    # @param [Hash] opts the optional parameters
    # @option opts [LanguagesLocaleBody] :body
    # @return [nil]
    def create_a_translation(survey_id, locale, opts = {})
      create_a_translation_with_http_info(survey_id, locale, opts)
      nil
    end

    # Create a translation
    # Create a translation
    # @param survey_id
    # @param locale
    # @param [Hash] opts the optional parameters
    # @option opts [LanguagesLocaleBody] :body
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def create_a_translation_with_http_info(survey_id, locale, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TranslationsForMultilingualSurveysApi.create_a_translation ...'
      end
      # verify the required parameter 'survey_id' is set
      if @api_client.config.client_side_validation && survey_id.nil?
        fail ArgumentError, "Missing the required parameter 'survey_id' when calling TranslationsForMultilingualSurveysApi.create_a_translation"
      end
      # verify the required parameter 'locale' is set
      if @api_client.config.client_side_validation && locale.nil?
        fail ArgumentError, "Missing the required parameter 'locale' when calling TranslationsForMultilingualSurveysApi.create_a_translation"
      end
      # resource path
      local_var_path = '/v3/surveys/{survey_id}/languages/{locale}'.sub('{' + 'survey_id' + '}', survey_id.to_s).sub('{' + 'locale' + '}', locale.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(opts[:'body'])

      return_type = opts[:return_type]

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TranslationsForMultilingualSurveysApi#create_a_translation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get a survey translation
    # Get a survey translation
    # @param survey_id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_a_survey_translation(survey_id, opts = {})
      get_a_survey_translation_with_http_info(survey_id, opts)
      nil
    end

    # Get a survey translation
    # Get a survey translation
    # @param survey_id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def get_a_survey_translation_with_http_info(survey_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TranslationsForMultilingualSurveysApi.get_a_survey_translation ...'
      end
      # verify the required parameter 'survey_id' is set
      if @api_client.config.client_side_validation && survey_id.nil?
        fail ArgumentError, "Missing the required parameter 'survey_id' when calling TranslationsForMultilingualSurveysApi.get_a_survey_translation"
      end
      # resource path
      local_var_path = '/v3/surveys/{survey_id}/languages'.sub('{' + 'survey_id' + '}', survey_id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body]

      return_type = opts[:return_type]

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TranslationsForMultilingualSurveysApi#get_a_survey_translation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get available languages
    # Get available languages
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_available_languages(opts = {})
      get_available_languages_with_http_info(opts)
      nil
    end

    # Get available languages
    # Get available languages
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def get_available_languages_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TranslationsForMultilingualSurveysApi.get_available_languages ...'
      end
      # resource path
      local_var_path = '/v3/survey_languages'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body]

      return_type = opts[:return_type]

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TranslationsForMultilingualSurveysApi#get_available_languages\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get translation structure
    # Get translation structure
    # @param survey_id
    # @param locale
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def get_translation_structure(survey_id, locale, opts = {})
      get_translation_structure_with_http_info(survey_id, locale, opts)
      nil
    end

    # Get translation structure
    # Get translation structure
    # @param survey_id
    # @param locale
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def get_translation_structure_with_http_info(survey_id, locale, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TranslationsForMultilingualSurveysApi.get_translation_structure ...'
      end
      # verify the required parameter 'survey_id' is set
      if @api_client.config.client_side_validation && survey_id.nil?
        fail ArgumentError, "Missing the required parameter 'survey_id' when calling TranslationsForMultilingualSurveysApi.get_translation_structure"
      end
      # verify the required parameter 'locale' is set
      if @api_client.config.client_side_validation && locale.nil?
        fail ArgumentError, "Missing the required parameter 'locale' when calling TranslationsForMultilingualSurveysApi.get_translation_structure"
      end
      # resource path
      local_var_path = '/v3/surveys/{survey_id}/languages/{locale}'.sub('{' + 'survey_id' + '}', survey_id.to_s).sub('{' + 'locale' + '}', locale.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body]

      return_type = opts[:return_type]

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TranslationsForMultilingualSurveysApi#get_translation_structure\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Modify a translation
    # Modify a translation
    # @param survey_id
    # @param locale
    # @param [Hash] opts the optional parameters
    # @option opts [LanguagesLocaleBody1] :body
    # @return [nil]
    def modify_a_translation(survey_id, locale, opts = {})
      modify_a_translation_with_http_info(survey_id, locale, opts)
      nil
    end

    # Modify a translation
    # Modify a translation
    # @param survey_id
    # @param locale
    # @param [Hash] opts the optional parameters
    # @option opts [LanguagesLocaleBody1] :body
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def modify_a_translation_with_http_info(survey_id, locale, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TranslationsForMultilingualSurveysApi.modify_a_translation ...'
      end
      # verify the required parameter 'survey_id' is set
      if @api_client.config.client_side_validation && survey_id.nil?
        fail ArgumentError, "Missing the required parameter 'survey_id' when calling TranslationsForMultilingualSurveysApi.modify_a_translation"
      end
      # verify the required parameter 'locale' is set
      if @api_client.config.client_side_validation && locale.nil?
        fail ArgumentError, "Missing the required parameter 'locale' when calling TranslationsForMultilingualSurveysApi.modify_a_translation"
      end
      # resource path
      local_var_path = '/v3/surveys/{survey_id}/languages/{locale}'.sub('{' + 'survey_id' + '}', survey_id.to_s).sub('{' + 'locale' + '}', locale.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(opts[:'body'])

      return_type = opts[:return_type]

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TranslationsForMultilingualSurveysApi#modify_a_translation\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
